openapi: 3.0.3
info:
  title: Kamini SSH Certificate Authority API
  version: 0.1.0
  description: |
    Kamini is a pluggable SSH CA that issues short-lived user certificates after modern identity authentication.
    This spec describes the minimal REST API for the MVP server.
servers:
  - url: https://localhost:8443
    description: Local development server
paths:
  /v1/ssh/sign-user:
    post:
      summary: Issue a short-lived SSH user certificate
      description: |
        Request a signed SSH user certificate. Requires a valid OIDC bearer token.
      operationId: signUserCert
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                public_key:
                  type: string
                  example: "ssh-ed25519 AAAAC3..."
                  description: SSH public key to sign
                ttl_seconds:
                  type: integer
                  example: 3600
                  description: Requested certificate lifetime in seconds
              required:
                - public_key
                - ttl_seconds
      responses:
        '200':
          description: Certificate issued
          content:
            application/json:
              schema:
                type: object
                properties:
                  certificate_authorized_key:
                    type: string
                    example: "ssh-ed25519-cert-v01@openssh.com AAAA..."
                  serial:
                    type: integer
                    example: 123456
                  not_before:
                    type: integer
                    example: 1699999999
                  not_after:
                    type: integer
                    example: 1700003599
                required:
                  - certificate_authorized_key
                  - serial
                  - not_before
                  - not_after
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
        '409':
          description: Conflict (e.g., TTL exceeds max)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
  /v1/healthz:
    get:
      summary: Health check
      description: Probe endpoint for readiness/liveness checks.
      operationId: healthz
      responses:
        '200':
          description: Healthy
          content:
            text/plain:
              schema:
                type: string
                example: "ok"
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
      description: |
        Use an OIDC-issued JWT access token in the Authorization header:
        'Authorization: Bearer <token>'.
        The token must be obtained by the client from the configured identity provider (e.g., Entra ID, Okta, etc.).
        Required for all endpoints except /v1/healthz.
  schemas:
    ErrorEnvelope:
      type: object
      properties:
        error:
          type: object
          properties:
            code:
              type: string
              example: "AUTH_INVALID_TOKEN"
            message:
              type: string
              example: "Signature/claims invalid"
            retryable:
              type: boolean
              example: false
            trace_id:
              type: string
              example: "abcd-1234"
            details:
              type: object
              additionalProperties: true
      required:
        - error
